version: '4'

services:

  frontend:
    build:
      context: ./frontend
      # Use the default api url
      # args:
      #   - api_url=http://localhost:8080
    container_name: frontend
    # No ports exposure needed with reverse proxy
    # ports:
    #   - "5000:5000"

  backend:
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=mfx
      - POSTGRES_PASSWORD=supersecret
      - POSTGRES_DATABASE=postgres
    build:
      context: ./backend
      args:
        # cors requests now from nginx exposed port
        - cors=http://localhost:3000
        - redis_host=redis
    container_name: backend
    # No ports exposure needed with reverse proxy
    # ports:
    #   - "8080:8080"
    depends_on:
      - redis

  redis:
    image: redis
    depends_on:
      - db


  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: mfx
      POSTGRES_PASSWORD: supersecret
    container_name: db_psql
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # frontend and backend must be alive before nginx
    depends_on:
      - frontend
      - backend
